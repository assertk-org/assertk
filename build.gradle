import org.apache.tools.ant.taskdefs.condition.Os
import io.gitlab.arturbosch.detekt.Detekt
import org.jetbrains.dokka.gradle.DokkaTask

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.4.0' apply false
    id 'org.jetbrains.dokka' version '1.4.0-rc' apply false
    id 'io.gitlab.arturbosch.detekt' version '1.5.0' apply false
    id 'org.ajoberstar.git-publish' version '2.1.1' apply false
}

version = '0.23-SNAPSHOT'

ext {
    isReleaseVersion = !(version =~ /-SNAPSHOT$/)

    opentest4k_version = '1.2.1-SNAPSHOT'
    kotlin_coroutines_version = '1.3.9'
}

subprojects {
    group 'com.willowtreeapps.assertk'

    configurations.all {
        // Don't cache SNAPSHOT deps
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {
        mavenCentral()
        jcenter()
        if (!isReleaseVersion) {
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots'}
        }
    }
}

configure(subprojects.findAll({ it.name.startsWith('assertk') })) {
    afterEvaluate {
        task detektMain(type: Detekt) {
            setSource(files(kotlin.sourceSets.commonMain.kotlin, kotlin.sourceSets.jsMain.kotlin, kotlin.sourceSets.jvmMain.kotlin, kotlin.sourceSets.nativeMain.kotlin))
            config.from(files("$rootProject.projectDir/detekt.yml"))
            buildUponDefaultConfig = true
            reports {
                xml.destination = file("$buildDir/reports/detektMain/detekt.xml")
                html.destination = file("$buildDir/reports/detektMain/detekt.html")
            }
        }

        task detektTest(type: Detekt) {
            setSource(files(kotlin.sourceSets.commonTest.kotlin, kotlin.sourceSets.jsTest.kotlin, kotlin.sourceSets.jvmTest.kotlin, kotlin.sourceSets.nativeTest.kotlin))
            config.from(files("$rootProject.projectDir/detekt-test.yml"))
            buildUponDefaultConfig = true
            reports {
                xml.destination = file("$buildDir/reports/detektTest/detekt.xml")
                html.destination = file("$buildDir/reports/detektTest/detekt.html")
            }
        }

        tasks.detekt.dependsOn(detektMain, detektTest)

        dokkaHtml {
            outputDirectory = "$buildDir/javadoc/"
            dokkaSourceSets {
                commonMain {}
                jsMain {}
                jvmMain {
                    jdkVersion = 8
                }
                linuxMain {}
                iosArm64Main {}
                iosX64Main {}
                macosMain {}

                configureEach {
                    sourceLink {
                        path = "src"
                        url = "https://github.com/willowtreeapps/assertk/tree/v${version}/${project.name}/src"
                        lineSuffix = "#L"
                    }
                }
            }
        }

        task dokkaCommon(type: DokkaTask) {
            outputDirectory = "$buildDir/javadoc/common"
            dokkaSourceSets {
                commonMain {}
            }
        }

        task dokkaJs(type: DokkaTask) {
            outputDirectory = "$buildDir/javadoc/js"
            dokkaSourceSets {
                commonMain {}
                jsMain {}
            }
        }

        task dokkaJvm(type: DokkaTask) {
            outputDirectory = "$buildDir/javadoc/jvm"
            dokkaSourceSets {
                commonMain {}
                jvmMain {}
            }
        }

        task dokkaNative(type: DokkaTask) {
            outputDirectory = "$buildDir/javadoc/native"
            dokkaSourceSets {
                commonMain {}
                linuxMain {}
                iosArm64Main {}
                iosX64Main {}
                macosMain {}
            }
        }

        task dokkaJavadocCommonJar(type: Jar, dependsOn: dokkaCommon) {
            archiveClassifier.set('javadoc')
            from "$buildDir/javadoc/common"
        }

        task dokkaJavadocJsJar(type: Jar, dependsOn: dokkaJs) {
            archiveClassifier.set('javadoc')
            from "$buildDir/javadoc/js"
        }

        task dokkaJavadocJvmJar(type: Jar, dependsOn: dokkaJvm) {
            archiveClassifier.set('javadoc')
            from "$buildDir/javadoc/jvm"
        }

        task dokkaJavadocNativeJar(type: Jar, dependsOn: dokkaNative) {
            archiveClassifier.set('javadoc')
            from "$buildDir/javadoc/native"
        }

        task emptyJavadocJar(type: Jar) {
            archiveClassifier.set('javadoc')
        }

        task emptySourcesJar(type: Jar) {
            archiveClassifier.set('sources')
        }

        publishing {
            repositories {
                maven {
                    if (rootProject.ext.isReleaseVersion) {
                        url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    } else {
                        url 'https://oss.sonatype.org/content/repositories/snapshots/'
                    }

                    credentials {
                        username = project.findProperty('sonatype.username')
                        password = project.findProperty('sonatype.password')
                    }
                }
            }

            publications {
                js {
                    artifact dokkaJavadocJsJar
                }
                jvm {
                    artifact dokkaJavadocJvmJar
                }
                linux {
                    artifact dokkaJavadocNativeJar
                }
                // These aren't available if you aren't on macos
                if (Os.isFamily(Os.FAMILY_MAC)) {
                    [iosArm64, iosX64, macos].each {
                        it.artifact dokkaJavadocNativeJar
                    }
                }
                metadata {
                    artifact dokkaJavadocCommonJar
                }
                kotlinMultiplatform {
                    // Source jars are only created for platforms, not the common artifact.
                    artifact emptySourcesJar
                    artifact dokkaJavadocCommonJar
                }

                all {
                    def siteUrl = 'https://github.com/willowtreeapps/assertk'
                    def gitUrl = 'https://github.com/willowtreeapps/assertk.git'

                    pom {
                        name = project.name
                        description = 'Assertions for Kotlin inspired by assertj'
                        url = siteUrl

                        scm {
                            url = siteUrl
                            connection = gitUrl
                            developerConnection = gitUrl
                        }

                        licenses {
                            license {
                                name = 'The Apache Software License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                                distribution = 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'evant'
                                name = 'Evan Tatarka'
                            }
                        }
                    }
                }
            }
        }

        if (isReleaseVersion) {
            signing {
                publishing.publications.all { sign it }
            }
        }
    }
}
